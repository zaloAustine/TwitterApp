plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id("kotlin-kapt")
    id("androidx.navigation.safeargs.kotlin")
    id("dagger.hilt.android.plugin")
    id("kotlin-parcelize")
    id 'com.google.secrets_gradle_plugin' version '0.4'
}

def apikeyPropertiesFile = rootProject.file("keys.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))


android {
    compileSdk 31

    defaultConfig {
        applicationId "com.zalocoders.twitterapp"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "TWITTER_BEARER_TOKEN", apikeyProperties['TWITTER_BEARER_TOKEN'])


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    def paging_version = "3.1.0"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //kotlin coroutines
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2')

    // Design
    implementation('com.google.android.material:material:1.5.0-beta01')
    implementation('androidx.constraintlayout:constraintlayout:2.1.2')
    implementation("androidx.legacy:legacy-support-v4:1.0.0")
    implementation("androidx.appcompat:appcompat:1.4.0")
    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.1.0")

// DI - HILT
    implementation('com.google.dagger:hilt-android:2.40')
    kapt("com.google.dagger:hilt-compiler:2.40")

//network
    implementation("com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2")
    implementation("com.squareup.retrofit2:retrofit:2.9.0")
    implementation("com.squareup.okhttp3:okhttp:5.0.0-alpha.2")
    api "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

// Moshi
    implementation("com.squareup.retrofit2:converter-moshi:2.9.0")
    implementation("com.squareup.moshi:moshi-kotlin:1.12.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.12.0")


    // Lifecycle
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.4.0")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.4.0")
    implementation("androidx.lifecycle:lifecycle-process:2.4.0")
    kapt("androidx.lifecycle:lifecycle-common-java8:2.4.0")
    implementation("androidx.lifecycle:lifecycle-extensions:2.2.0")
    implementation('com.jakewharton.timber:timber:5.0.1')

    //navigation
    implementation("androidx.navigation:navigation-fragment-ktx:2.3.5")
    implementation("androidx.navigation:navigation-ui-ktx:2.3.5")

    //room
    implementation('androidx.room:room-runtime:2.4.0-beta02')
    kapt('androidx.room:room-compiler:2.4.0-beta02')
    implementation("androidx.room:room-ktx:2.3.0")

    //glide
    implementation("com.github.bumptech.glide:glide:4.12.0")
    kapt("com.github.bumptech.glide:compiler:4.12.0")

    //paging
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // Tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation("androidx.test:runner:1.4.0")
    androidTestImplementation("androidx.test:core:1.4.0")
    testImplementation("com.google.truth:truth:1.1.2")
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation("androidx.test.espresso:espresso-contrib:3.3.0")
    testImplementation("android.arch.core:core-testing:1.1.1")
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1'
    testImplementation "io.mockk:mockk:1.10.6"
    testImplementation 'org.robolectric:robolectric:4.4'
    testImplementation "com.google.truth:truth:1.1.2"
    kaptTest 'com.google.dagger:hilt-android-compiler:2.37'
    implementation 'androidx.test.ext:junit-ktx:1.1.3'

    testImplementation 'com.google.dagger:hilt-android-testing:2.37'
    debugImplementation 'androidx.fragment:fragment-testing:1.3.6'
    // For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.37'
    // ...with Kotlin.
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.37'
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    testImplementation 'com.jraska.livedata:testing-ktx:1.2.0'

    testImplementation("com.squareup.okhttp3:mockwebserver:4.9.1")

}